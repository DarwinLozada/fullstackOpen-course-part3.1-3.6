{"version":3,"sources":["components/Header.jsx","services/contacts.js","components/Notification.jsx","components/AddContact.jsx","components/Contact.jsx","components/Contacts.jsx","components/Filter.jsx","components/Phonebook.jsx","App.js","index.js"],"names":["Header","className","baseUrl","headers","Accept","contactServcices","getAllContacts","axios","get","then","response","data","createContact","newContact","post","updateContact","id","put","deleteContact","delete","defaultStyle","transition","opacity","marginLeft","transitionStyles","entering","top","visibility","entered","exiting","exited","Notification","messageStyles","inProp","in","type","messageText","button1Text","button2Text","button1Function","button2Function","Error","Transition","timeout","state","style","onClick","AddContact","props","useState","showNotiNewContact","setShowNotiNewContact","showNotiInvalidCredentials","setShowNotiInvalidCredentials","showNotiContactWithSameName","setShowNotiContactWithSameName","shouldChangeContactNumber","setShouldChangeContactNumber","newContactName","useRef","useEffect","submitContactWithNewNumber","contacts","find","contact","name","newName","number","newNumber","newContacts","map","contactServices","console","log","setContactsState","setContactsToShow","setContacts","current","setTimeout","setNewName","setNewNumber","onSubmit","event","preventDefault","replace","length","some","retrievedContact","placeholder","value","onChange","target","Contact","showNotiDeleteContact","setShowNotiDeleteContact","shouldDeleteContact","setShouldDeleteContact","wasThereAnError","setWasThereAnError","handleDelete","filter","person","catch","error","src","alt","Contacts","contactsToShow","Filter","filterName","setFilterName","filteredcontacts","undefined","toLowerCase","includes","Phonebook","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b897c2d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"flex items-center mb-5 bg-blue-600 w-full h-16 shadow-lg\">\r\n      <h1 className=\"pl-6 text-white font-semibold text-lg\">Phonebook</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/api/contacts\";\r\n\r\nconst headers = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  Accept: \"application/json;odata.metadata=full\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst getAllContacts = () => {\r\n  const request = axios.get(baseUrl, { headers: headers });\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst createContact = (newContact) => {\r\n  const request = axios.post(baseUrl, newContact, { headers: headers });\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updateContact = (id, newContact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newContact, {\r\n    headers: headers,\r\n  });\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, { headers: headers });\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst contactServcices = {\r\n  getAllContacts,\r\n  createContact,\r\n  updateContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactServcices;\r\n","import React from \"react\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nconst duration = 300;\r\n\r\nconst defaultStyle = {\r\n  transition: `${duration}ms ease-in-out`,\r\n  opacity: 0,\r\n  marginLeft: \"-5rem\",\r\n};\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 0.95, top: \"2rem\", visibility: \"visible\" },\r\n  entered: { opacity: 0.95, top: \"2rem\", visibility: \"visible\" },\r\n  exiting: { opacity: 0, top: \"0rem\" },\r\n  exited: { opacity: 0, top: \"0rem\", visibility: \"hidden\" },\r\n};\r\n\r\nconst Notification = ({\r\n  in: inProp,\r\n  type,\r\n  messageText,\r\n  button1Text,\r\n  button2Text,\r\n  button1Function,\r\n  button2Function,\r\n}) => {\r\n  let messageStyles;\r\n  switch (type) {\r\n    case \"confirm\":\r\n      messageStyles = \"bg-yellow-200 ring ring-yellow-400\";\r\n      break;\r\n    case \"successful\":\r\n      messageStyles = \"bg-blue-200 ring ring-blue-400\";\r\n      break;\r\n    case \"unsuccessful\":\r\n      messageStyles = \"bg-red-200 ring ring-red-400\";\r\n      break;\r\n    default:\r\n      throw Error(\"invalid notification type\");\r\n  }\r\n\r\n  return (\r\n    <Transition in={inProp} timeout={duration}>\r\n      {(state) => (\r\n        <div\r\n          className={`flex flex-col px-4 py-6 fixed  rounded left-2/4 h-22 w-64 md:w-80 ${messageStyles}`}\r\n          style={{ ...defaultStyle, ...transitionStyles[state] }}\r\n        >\r\n          <h2 className=\"font-medium mb-2 text-blue-800 overflow-hidden\">\r\n            {messageText}\r\n          </h2>\r\n          {type === \"confirm\" && (\r\n            <div className=\"flex flex-row justify-between\">\r\n              <button\r\n                className=\"px-4 py-2 bg-red-400 transition focus:ring focus:ring-red-400 focus:outline-none hover:bg-red-300 rounded\"\r\n                onClick={() => button1Function()}\r\n              >\r\n                {button1Text}\r\n              </button>\r\n              <button\r\n                className=\"px-4 py-2 bg-blue-400 transition focus:ring focus:ring-blue-400 focus:outline-none hover:bg-blue-300 rounded\"\r\n                onClick={() => button2Function()}\r\n              >\r\n                {button2Text}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport contactServices from \"../services/contacts\";\r\nimport Notification from \"./Notification\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport \"../app.css\";\r\n\r\nconst NOTI_DURATION = 4000;\r\n\r\nconst AddContact = ({ props }) => {\r\n  const [showNotiNewContact, setShowNotiNewContact] = useState(false);\r\n  const [showNotiInvalidCredentials, setShowNotiInvalidCredentials] = useState(\r\n    false\r\n  );\r\n  const [\r\n    showNotiContactWithSameName,\r\n    setShowNotiContactWithSameName,\r\n  ] = useState(false);\r\n\r\n  const [shouldChangeContactNumber, setShouldChangeContactNumber] = useState(\r\n    false\r\n  );\r\n\r\n  const newContactName = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (shouldChangeContactNumber) {\r\n      submitContactWithNewNumber();\r\n      setShowNotiContactWithSameName(false);\r\n    }\r\n  }, [shouldChangeContactNumber]);\r\n\r\n  const submitContactWithNewNumber = () => {\r\n    let newContact = props.contacts.find(\r\n      (contact) => contact.name === props.newName\r\n    );\r\n    newContact = { ...newContact, number: props.newNumber };\r\n    const newContacts = [...props.contacts].map((contact) => {\r\n      return contact.name === props.newName ? newContact : contact;\r\n    });\r\n\r\n    contactServices\r\n      .updateContact(newContact.id, newContact)\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n\r\n    setContactsState(newContacts);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      //If the new name or the new number contains only white spaces, we alert the invalid credencials\r\n\r\n      !props.newName.replace(/\\s/g, \"\").length ||\r\n      !props.newNumber.replace(/\\s/g, \"\").length\r\n    ) {\r\n      setShowNotiInvalidCredentials(true);\r\n\r\n      setTimeout(() => {\r\n        setShowNotiInvalidCredentials(false);\r\n      }, NOTI_DURATION);\r\n      return null;\r\n    }\r\n\r\n    let newContact;\r\n    let newContacts;\r\n\r\n    if (props.contacts.some((contact) => contact.name === props.newName)) {\r\n      setShowNotiContactWithSameName(true);\r\n    } else {\r\n      newContact = {\r\n        name: props.newName,\r\n        number: props.newNumber,\r\n      };\r\n      contactServices.createContact(newContact).then((retrievedContact) => {\r\n        newContacts = [...props.contacts, retrievedContact];\r\n        setContactsState(newContacts);\r\n      });\r\n    }\r\n  };\r\n\r\n  const setContactsState = (newContacts) => {\r\n    props.setContactsToShow(newContacts);\r\n    props.setContacts(newContacts);\r\n    setShowNotiContactWithSameName(false);\r\n    setShouldChangeContactNumber(false);\r\n    newContactName.current = props.newName;\r\n\r\n    setShowNotiNewContact(true);\r\n\r\n    setTimeout(() => {\r\n      setShowNotiNewContact(false);\r\n    }, NOTI_DURATION);\r\n\r\n    // Reset input field state\r\n    props.setNewName(\"\");\r\n    props.setNewNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-4 px-6 rounded bg-indigo-50 shadow\">\r\n      <Notification\r\n        messageText={`${newContactName.current} is alredy added to the phonebook. Do you want to replace the old number with a new one?`}\r\n        type=\"confirm\"\r\n        in={showNotiContactWithSameName}\r\n        button1Text=\"Change\"\r\n        button2Text=\"Cancel\"\r\n        button1Function={() => setShouldChangeContactNumber(true)}\r\n        button2Function={() => setShowNotiContactWithSameName(false)}\r\n      />\r\n      <Notification\r\n        messageText={`${newContactName.current} added successfuly to the Phonebook`}\r\n        type=\"successful\"\r\n        in={showNotiNewContact}\r\n      />\r\n\r\n      <Notification\r\n        messageText={`Don't submit empty credentials`}\r\n        type=\"unsuccessful\"\r\n        in={showNotiInvalidCredentials}\r\n      />\r\n\r\n      <h2 className=\"mb-4 font-semibold text-blue-800 text-xl tracking-normal pt-2\">\r\n        New Contact\r\n      </h2>\r\n      <form onSubmit={handleSubmit} className=\"flex flex-col\">\r\n        <div className=\"flex flex-col pr-20 md:flex-row md:gap-x-10\">\r\n          <div className=\"flex flex-col py-1\">\r\n            <input\r\n              placeholder=\"Name\"\r\n              value={props.newName}\r\n              className=\"my-2 pl-1 rounded-sm bg-indigo-50 border-indigo-300 border-b-2 outline-none\"\r\n              onChange={(event) => {\r\n                props.setNewName(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col py-1\">\r\n            <input\r\n              placeholder=\"Number\"\r\n              value={props.newNumber}\r\n              className=\"mt-2 pl-1 rounded-sm bg-indigo-50 border-indigo-300 border-b-2 outline-none\"\r\n              onChange={(event) => {\r\n                props.setNewNumber(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-6\r\n             bg-blue-600 rounded font-semibold text-gray-2\r\n            00  mr-4 py-1 w-full text-white outline-none transition-colors duration-300 hover:bg-blue-500 focus:outline-none focus:ring\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport contactServices from \"../services/contacts\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst Contact = ({ contact, setContactsToShow, setContacts }) => {\r\n  const [showNotiDeleteContact, setShowNotiDeleteContact] = useState(false);\r\n  const [shouldDeleteContact, setShouldDeleteContact] = useState(false);\r\n  const [wasThereAnError, setWasThereAnError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShouldDeleteContact(false);\r\n    setTimeout(() => {\r\n      setWasThereAnError(false);\r\n    }, 4000);\r\n  }, [wasThereAnError]);\r\n\r\n  // This effect runs when the user clicks Delete in the notification\r\n\r\n  useEffect(() => {\r\n    if (shouldDeleteContact) {\r\n      // Change the state of the notification to \"exiting\"\r\n      setShowNotiDeleteContact(false);\r\n      setTimeout(() => {\r\n        if (shouldDeleteContact) {\r\n          handleDelete();\r\n        }\r\n      }, 300);\r\n    }\r\n  }, [shouldDeleteContact]);\r\n\r\n  const handleDelete = () => {\r\n    contactServices\r\n      .deleteContact(contact.id)\r\n      .then(() => {\r\n        setContacts((contacts) => {\r\n          return contacts.filter((person) => person.id !== contact.id);\r\n        });\r\n        setContactsToShow((contacts) => {\r\n          return contacts.filter((person) => person.id !== contact.id);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setWasThereAnError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-between py-4\">\r\n      <Notification\r\n        messageText={`Information of ${contact.name} has alredy been removed from server`}\r\n        type=\"unsuccessful\"\r\n        in={wasThereAnError}\r\n      />\r\n      <Notification\r\n        messageText={`Are you sure you want to delete ${contact.name} from the Phonebook?`}\r\n        type=\"confirm\"\r\n        in={showNotiDeleteContact}\r\n        button1Text=\"Delete\"\r\n        button2Text=\"Cancel\"\r\n        button1Function={() => setShouldDeleteContact(true)}\r\n        button2Function={() => setShowNotiDeleteContact(false)}\r\n      />\r\n\r\n      <div className=\"flex overflow-hidden w-full items-center\">\r\n        <p\r\n          className=\"flex p-2 mr-2 text-blue-500 tracking-wider text-lg font-semibold rounded max-w-3/4 truncate\"\r\n          key={contact.id}\r\n        >\r\n          {contact.name}\r\n        </p>\r\n        <p className=\"tracking-wider border-l-2 px-4 overflow-auto\">\r\n          {contact.number}\r\n        </p>\r\n      </div>\r\n      <button\r\n        onClick={() => setShowNotiDeleteContact(true)}\r\n        className=\"transition-colors duration-200 p-2 ring-red-200 focus:ring focus:outline-none bg-red-400 rounded hover:bg-red-300\"\r\n      >\r\n        <img\r\n          className=\"w-4\"\r\n          src=\"https://img.icons8.com/ios-glyphs/30/000000/delete-sign.png\"\r\n          alt=\"delete_contact\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst Contacts = ({ props }) => {\r\n  return (\r\n    <div className=\"flex flex-col mt-4 divide-y\">\r\n      {props.contactsToShow.length !== 0 ? (\r\n        props.contactsToShow.map((person) => {\r\n          return (\r\n            <Contact\r\n              contact={{\r\n                id: person.id,\r\n                name: person.name,\r\n                number: person.number,\r\n              }}\r\n              key={person.id}\r\n              setContactsToShow={props.setContactsToShow}\r\n              setContacts={props.setContacts}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <h1 className=\"text-gray-400 text-center text-lg mt-20\">\r\n          There are no contacts\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Filter = ({ props }) => {\r\n  const { contacts, setContactsToShow } = props;\r\n  const [filterName, setFilterName] = useState(\"\");\r\n  let filteredcontacts = useRef(undefined);\r\n\r\n  filteredcontacts.current = contacts.filter((person) => {\r\n    return person.name.toLowerCase().includes(filterName.toLowerCase());\r\n  });\r\n\r\n  const handleOnChange = (event) => {\r\n    event.preventDefault();\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContactsToShow(filteredcontacts.current);\r\n  }, [filterName, setContactsToShow]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between bg-purple-100 p-4 rounded shadow\">\r\n      <p className=\"tracking-normal font-semibold text-purple-600 mb-3\">\r\n        Filter Contacts\r\n      </p>\r\n      <form className=\"flex flex-col\">\r\n        <input\r\n          type=\"text\"\r\n          value={filterName}\r\n          onChange={handleOnChange}\r\n          className=\"bg-purple-100 border-b-2 mt-2 border-purple-300 outline-none\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport AddNumber from \"./AddContact\";\r\nimport Contacts from \"./Contacts\";\r\nimport Filter from \"./Filter\";\r\nimport contactServices from \"../services/contacts\";\r\n\r\nconst Phonebook = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [contactsToShow, setContactsToShow] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    contactServices.getAllContacts().then((response) => {\r\n      setContacts(response);\r\n      setContactsToShow(response);\r\n    });\r\n  }, [setContacts, setContactsToShow]);\r\n\r\n  return (\r\n    <div className=\"pb-4\">\r\n      <Header />\r\n\r\n      <div className=\"flex flex-col px-6 pt-2\">\r\n        <div className=\"flex flex-col gap-y-7 gap-x-5 md:flex-row md:justify-between\">\r\n          <AddNumber\r\n            props={{\r\n              newName,\r\n              setNewName,\r\n              newNumber,\r\n              setNewNumber,\r\n              contacts,\r\n              setContacts,\r\n              setContactsToShow,\r\n            }}\r\n          />\r\n          <Filter\r\n            props={{\r\n              contacts: contacts,\r\n              setContactsToShow: setContactsToShow,\r\n            }}\r\n          />\r\n        </div>\r\n        <Contacts props={{ contactsToShow, setContactsToShow, setContacts }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\nimport Phonebook from \"./components/Phonebook\";\nimport \"./tailwind.css\";\n\nconst App = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}